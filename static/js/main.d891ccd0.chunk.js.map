{"version":3,"sources":["components/AnswerChoices.js","components/Question.js","components/NextQuestion.js","App.js","index.js"],"names":["AnswerChoices","props","_jsx","className","onClick","setAnsDisplayed","answer","children","Question","_jsxs","class","question","map","clickFunction","NextQuestion","goToNextQuestion","currentQue","App","_useState","useState","_useState2","_slicedToArray","currentQuestionNumber","setQuestionNum","_useState3","_useState4","answerDisplayed","data","text","choices","questionNum","correctAnsIndex","correct_choice_index","getCorrectAnswer","createRoot","document","getElementById","render"],"mappings":"2LASeA,MATf,SAAuBC,GACrB,OACEC,cAAA,OAAKC,UAAU,gBACfC,QAAS,kBAAMH,EAAMI,gBAAgBJ,EAAMK,OAAO,EAACC,SAChDN,EAAMK,QAGb,ECUeE,MAff,SAAkBP,GAChB,OACEQ,eAAA,OAAKC,MAAM,UAASH,SAAA,CAClBE,eAAA,KAAAF,SAAA,CAAG,IAAEN,EAAMU,SAAS,OACnBV,EAAMK,OAAOM,KAAI,SAACN,GAAM,OACvBJ,cAACF,EAAa,CACZM,OAAQA,EACRF,QAAS,kBAAMH,EAAMY,eAAe,EACpCR,gBAAiBJ,EAAMI,iBACvB,MAIV,ECNeS,MATf,SAAsBb,GACpB,OACEQ,eAAA,OAAAF,SAAA,CACEL,cAAA,UAAQE,QAASH,EAAMc,iBAAiBR,SAAC,kBACzCE,eAAA,KAAGC,MAAM,UAASH,SAAA,CAAC,cAAYN,EAAMe,WAAW,SAGtD,E,OC+CeC,MAhDf,WACE,IAAAC,EAA8CC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAApDI,EAAqBF,EAAA,GAAEG,EAAcH,EAAA,GAC1CI,EAAyCL,mBAAS,MAAKM,EAAAJ,YAAAG,EAAA,GAAlDE,EAAeD,EAAA,GAAEpB,EAAeoB,EAAA,GA6BrC,OACEhB,eAAA,OAAKN,UAAU,MAAKI,SAAA,CAClBL,cAAA,MAAIC,UAAU,QAAOI,SAAC,YACtBL,cAACM,EAAQ,CACPG,SAAUgB,EAAKL,GAAuBX,SAASiB,KAC/CtB,OAAQqB,EAAKL,GAAuBX,SAASkB,QAC7CxB,gBAAiBA,IAEnBH,cAACY,EAAY,CACXC,iBAlBN,WACEQ,EAAeD,EAAwB,GACvCjB,EAAgB,MACc,IAA1BiB,GACFC,EAAe,EAGnB,EAYMP,WAAYM,EAAwB,IAEtCb,eAAA,KAAAF,SAAA,CAAG,IA9BmB,OAApBmB,EACK,wBACEA,IAXb,SAA0BI,GACxB,IAAId,EAAaW,EAAKG,GAAanB,SAC/BoB,EAAkBf,EAAWgB,qBAGjC,OAFiBhB,EAAWa,QAAQE,EAGtC,CAKiCE,CAAiBX,GACvC,mBAEA,uBAyBiB,SAG9B,EChDaY,qBAAWC,SAASC,eAAe,SAE3CC,OAAOnC,cAACe,EAAG,I","file":"static/js/main.d891ccd0.chunk.js","sourcesContent":["function AnswerChoices(props) {\n  return (\n    <div className=\"answer-choice\" \n    onClick={() => props.setAnsDisplayed(props.answer)}>\n      {props.answer}\n    </div>\n  );\n}\n\nexport default AnswerChoices;\n","import AnswerChoices from \"./AnswerChoices\";\n\nfunction Question(props) {\n  return (\n    <div class=\"allQues\">\n      <p> {props.question} </p>\n      {props.answer.map((answer) => (\n        <AnswerChoices\n          answer={answer}\n          onClick={() => props.clickFunction()}\n          setAnsDisplayed={props.setAnsDisplayed}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Question;\n","function NextQuestion(props) {\n  return (\n    <div>\n      <button onClick={props.goToNextQuestion}>Next Question</button>\n      <p class=\"allQues\"> Question #{props.currentQue} </p>\n    </div>\n  );\n}\n\nexport default NextQuestion;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Question from \"./components/Question\";\nimport NextQuestion from \"./components/NextQuestion\";\nimport data from \"./sample_data.json\";\n\nfunction App() {\n  let [currentQuestionNumber, setQuestionNum] = useState(0);\n  let [answerDisplayed, setAnsDisplayed] = useState(null);\n\n  function getCorrectAnswer(questionNum) {\n    let currentQue = data[questionNum].question;\n    let correctAnsIndex = currentQue.correct_choice_index;\n    let correctAns = currentQue.choices[correctAnsIndex];\n\n    return correctAns;\n  }\n\n  function QuestionAnswered() {\n    if (answerDisplayed === null) {\n      return \"Click an answer above\";\n    } else if (answerDisplayed === getCorrectAnswer(currentQuestionNumber)) {\n      return \"You are correct!\";\n    } else {\n      return \"You are incorrect :(\";\n    }\n  }\n\n  function goToNextQuestion() {\n    setQuestionNum(currentQuestionNumber + 1);\n    setAnsDisplayed(null);\n    if (currentQuestionNumber === 4) {\n      setQuestionNum(0);\n    } else {\n    }\n  }\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"title\">Trivia </h1>\n      <Question\n        question={data[currentQuestionNumber].question.text}\n        answer={data[currentQuestionNumber].question.choices}\n        setAnsDisplayed={setAnsDisplayed}\n      />\n      <NextQuestion\n        goToNextQuestion={goToNextQuestion}\n        currentQue={currentQuestionNumber + 1}\n      />\n      <p> {QuestionAnswered()} </p>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nconst root = createRoot(document.getElementById(\"root\"));\n\nroot.render(<App />);\n"],"sourceRoot":""}